{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation for the Recipe Management Application",
    "version": "v1.0",
    "title": "CookBook - Recipe Management Application API",
    "termsOfService": "TERMS OF USE",
    "contact": {
      "name": "Akahrsh M",
      "url": "sample.domain.com/akahrsh",
      "email": "akahrsh.m@tcs.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:9090",
  "basePath": "/",
  "tags": [
    {
      "name": "recipe-controller",
      "description": "The Controllers for various Recipe Management actions"
    }
  ],
  "paths": {
    "/rest/v1/recipes/authenticate": {
      "post": {
        "tags": [
          "recipe-controller"
        ],
        "summary": "Authenticate the User and get the authentication token",
        "operationId": "authenticateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "authRequest",
            "description": "authRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RECIPE INSERTION SUCCESS",
            "schema": {
              "$ref": "#/definitions/AuthenticationResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "BAD REQUEST"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "UNHANDLED EXCEPTION"
          }
        }
      }
    },
    "/rest/v1/recipes/deleteRecipe/{recipeID}": {
      "delete": {
        "tags": [
          "recipe-controller"
        ],
        "summary": "Delete Recipe using mongoID",
        "operationId": "deleteRecipebyIDUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipeID",
            "in": "path",
            "description": "recipeID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "RECIPE DELETION SUCCESS",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "BAD REQUEST"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/rest/v1/recipes/getAllRecipes": {
      "get": {
        "tags": [
          "recipe-controller"
        ],
        "summary": "Retrieve all the available recipes from the DB",
        "operationId": "getAllRecipesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "RECIPE RETRIEVAL SUCCESS",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD REQUEST"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "RECIPES LIST EMPTY"
          }
        }
      }
    },
    "/rest/v1/recipes/getAllRecipesByAuthor/{recipeAuthor}": {
      "get": {
        "tags": [
          "recipe-controller"
        ],
        "summary": "Retrieve the Recipe by its Author",
        "operationId": "getRecipeByUserUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipeAuthor",
            "in": "path",
            "description": "recipeAuthor",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "RECIPE RETRIEVAL SUCCESS",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "RESOURCE NOT FOUND"
          }
        }
      }
    },
    "/rest/v1/recipes/saveRecipe": {
      "post": {
        "tags": [
          "recipe-controller"
        ],
        "summary": "Save the Recipe created by the User to Backend",
        "operationId": "saveRecipeUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "recipeDTO",
            "description": "recipeDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "RECIPE INSERTION SUCCESS",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD REQUEST"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "UNHANDLED EXCEPTION"
          }
        }
      }
    },
    "/rest/v1/recipes/saveRecipeList": {
      "post": {
        "tags": [
          "recipe-controller"
        ],
        "summary": "Save multiple Recipes as a list to the Backend",
        "operationId": "saveRecipeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "inputRecipeList",
            "description": "inputRecipeList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecipeDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecipeControllerResponse"
            }
          },
          "201": {
            "description": "RECIPE INSERTION SUCCESS",
            "schema": {
              "$ref": "#/definitions/RecipeControllerResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "UNHANDLED EXCEPTION"
          }
        }
      }
    },
    "/rest/v1/recipes/updateRecipe/{recipeID}": {
      "put": {
        "tags": [
          "recipe-controller"
        ],
        "summary": "Update a particular Recipe using mongoID",
        "operationId": "updateRecipeByIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipeID",
            "in": "path",
            "description": "recipeID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "recipeDTO",
            "description": "recipeDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RECIPE UPDATE SUCCESS",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "BAD REQUEST"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "UNHANDLED EXCEPTION"
          }
        }
      }
    }
  },
  "definitions": {
    "AuthenticationRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AuthenticationResponse": {
      "type": "object",
      "properties": {
        "authToken": {
          "type": "string"
        }
      }
    },
    "RecipeControllerResponse": {
      "type": "object",
      "properties": {
        "responseMessage": {
          "type": "string"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "RECIPE_SAVE_STATUS_SUCCESS",
            "RECIPE_SAVE_STATUS_FAILURE",
            "RECIPE_UPDATE_STATUS_SUCCESS",
            "RECIPE_UPDATE_STATUS_FAILURE",
            "RECIPE_RETRIEVAL_STATUS_FAILURE",
            "RECIPE_DELETION_STATUS_FAILURE",
            "RECIPE_DELETION_STATUS_SUCCESS"
          ]
        }
      }
    },
    "RecipeDTO": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string"
        },
        "recipeAuthor": {
          "type": "string"
        },
        "recipeID": {
          "type": "integer",
          "format": "int32"
        },
        "recipeIngredients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipeInstructions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipeName": {
          "type": "string"
        },
        "recipeSuitableServing": {
          "type": "integer",
          "format": "int32"
        },
        "veganRecipe": {
          "type": "boolean"
        }
      }
    }
  }
}